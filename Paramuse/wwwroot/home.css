@font-face {
    font-family: "Ink Free";
    src: url("Inkfree.woff2");
}

@font-face {
    /* Not all media control symbols are available everywhere, so provide a font with them all. */
    font-family: "Symbola";
    src: url("Symbola_hint-subset.woff2");
}

@keyframes peakHold {
    from {
        opacity: 0.5;
    }

    to {
        opacity: 0;
    }
}

:root {
    --background: black;
    --foreground: white;
}

html {
    background: var(--background);
    color: var(--foreground);
    font-family: "Ink Free";
}

body {
    max-width: 60em;
    min-width: 20em;
    margin: auto;
}

:is(#player, #album-list) button {
    --light-color: 119, 119, 0;
    --symbol-color: var(--light-color);
    position: relative;
    width: 2em;
    height: 2em;
    background: var(--background);
    color: rgb(var(--symbol-color));
    border: 0.1em solid rgb(var(--light-color));
    border-radius: 0.5em;
    font: bold 1.5em "Symbola";
}

    :is(#player, #album-list) button:hover {
        --light-color: 255, 255, 0;
        text-shadow: 0 0 0.5em rgb(var(--symbol-color)), 0 0 1.5em rgb(var(--symbol-color));
        box-shadow: 0 0 0.5em rgb(var(--light-color));
    }

        :is(#player, #album-list) button:hover::before {
            content: "";
            display: block;
            background: rgb(var(--symbol-color), 0.1);
            position: absolute;
            inset: 0;
        }

    :is(#player, #album-list) button.tag-missing {
        --light-color: 170, 34, 68;
    }

        :is(#player, #album-list) button.tag-missing:hover {
            --light-color: 255, 85, 153;
        }

    :is(#player, #album-list) button.tag-mixed {
        --light-color: 34, 119, 119;
    }

        :is(#player, #album-list) button.tag-mixed:hover {
            --light-color: 119, 255, 255;
        }

.album-cover {
    color: #555;
}

#player, #album-list, #tag-modal {
    --neon-off: 200, 34, 119;
    /* It's not yet possible to programatically change brightness and saturation in CSS, so specify multiple colours. */
    --neon-on: 255, 187, 221;
    --neon-glow: 255, 10, 123, 0.7;
    --glow-size: 4em;
    border: 0.2em solid rgb(var(--neon-off));
    border-radius: 1em;
}

#player, #album-list {
    margin: min(2vh, 1em) clamp(0.4em, 2vw, 1em);
}

#player {
    position: sticky;
    top: min(2vh, 1em);
    z-index: 1;
    display: grid;
    grid-template-columns: clamp(4.5em, min(18vh, 18vw), 12em) 1fr;
    grid-template-rows: repeat(3, clamp(1.5em, min(6vh, 6vw), 4em)) 1fr;
    column-gap: 1em;
    align-items: center;
    padding-top: clamp(0.5em, 2vh, 0.8em);
    padding-left: clamp(0.6em, min(3vh, 2vw), 1em);
    padding-right: clamp(0.6em, min(3vh, 2vw), 1em);
    background: var(--background);
    box-shadow: 0 0.5em 1em black, 0 -3em 2em 3em var(--background);
}

    #player.playing::after, #album-list details.playing::after, #tag-modal::after {
        content: "";
        position: absolute;
        inset: -0.2em;
        z-index: -1;
        border: inherit;
        border-radius: inherit;
        border-color: rgb(var(--neon-on));
        box-shadow: 0 0 calc(var(--glow-size) / 8) rgb(var(--neon-on)),
            0 0 calc(var(--glow-size) / 2) rgb(var(--neon-glow)),
            0 0 var(--glow-size) rgb(var(--neon-glow)),
            inset 0 0 calc(var(--glow-size) / 8) rgb(var(--neon-on)),
            inset 0 0 calc(var(--glow-size) / 2) rgb(var(--neon-glow)),
            inset 0 0 var(--glow-size) rgb(var(--neon-glow));
        background: rgb(var(--neon-off), 0.1);
        filter: blur(0.05em);
    }

    #player > .album-cover {
        grid-row: 1 / span 3;
        grid-column: 1;
        height: 100%;
        aspect-ratio: 1/1;
        font-size: clamp(4.5em, min(18vh, 18vw), 12em);
        line-height: 1em;
        text-align: center;
        text-decoration: none;
        display: grid;
        align-items: center;
        justify-items: center;
    }

        #player > .album-cover img {
            object-fit: contain;
            height: 100%;
            width: 100%;
        }

    #player > :is(.track-album, .track-artist, .track-title) {
        grid-column: 2;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: clamp(1em, min(4vh, 4vw), 2em);
        text-shadow: 0 0 0.2em black; /* Give the text a little contrast against the bright spectrum analyser. */
    }

    #player > .track-artist {
        grid-row: 1;
    }

    #player > .track-album {
        grid-row: 2;
    }

    #player > .track-title {
        grid-row: 3;
    }

    #player > .spectrum {
        grid-column: 2;
        grid-row: 1 / span 3;
        width: 100%;
        height: 100%;
        box-sizing: border-box;
        display: flex;
        gap: 4%;
        z-index: -1;
    }

        #player > .spectrum > div {
            height: 100%;
            width: 100%;
            display: flex;
            flex-direction: column-reverse; /* Reverse so that index 0 is at the bottom, to make animating easier. */
            gap: 5%;
        }

            #player > .spectrum > div > div {
                --segment-color: 85, 238, 0;
                height: 100%;
                width: 100%;
                border-radius: 10%;
                background: radial-gradient(rgb(var(--segment-color)) 30%, rgb(var(--segment-color), 0.6));
                box-shadow: 0 0 1em 0.2em rgb(var(--segment-color), 0.7);
                opacity: 0;
            }

                #player > .spectrum > div > div:nth-last-child(-n+3) {
                    --segment-color: 255, 221, 0;
                }

                #player > .spectrum > div > div:last-child {
                    --segment-color: 255, 34, 0;
                }

                #player > .spectrum > div > div.lit {
                    opacity: 1;
                }

                /* Apply the animation with :not so that it happens every time the .lit class is removed. */
                #player > .spectrum > div > div:not(.lit) {
                    animation-duration: 2s;
                    animation-name: peakHold;
                    animation-timing-function: ease-in;
                }

    #player > .controls {
        grid-column: 1 / span 2;
        width: 100%;
        display: grid;
        grid-template-rows: 3em;
        grid-template-columns: repeat(4, auto) 1fr 8em;
        padding: min(1.5vh, 0.8em) 0;
        box-sizing: border-box;
        line-height: 3em;
    }

        #player > .controls > label > input {
            display: none;
        }

            #player > .controls > label > input:checked + button {
                --symbol-color: 119, 255, 119;
                text-shadow: 0 0 0.5em rgb(var(--symbol-color)), 0 0 1.5em rgb(var(--symbol-color));
            }

        #player > .controls > .timeline {
            display: grid;
            grid-template-columns: 1fr min-content;
        }

            #player > .controls > .timeline > input {
                margin: 0 0.5em;
            }

            #player > .controls > .timeline > div {
                white-space: nowrap;
                margin-right: 0.5em;
                font-family: monospace;
            }

        #player > .controls > .volume {
            display: grid;
            grid-template-columns: 1.5em 1fr;
        }

            #player > .controls > .volume > input {
                width: 100%;
                margin: 0;
            }

#album-list {
    list-style: none;
    padding: 0;
    position: relative;
    z-index: 0;
}

    #album-list details, #tag-modal {
        --neon-off: 0, 119, 119;
        --neon-on: 100, 255, 255;
        --neon-glow: 0, 215, 255, 0.4;
        --glow-size: 2.5em;
        border: 0.2em solid rgb(var(--neon-off));
        border-radius: 1em;
    }

    #album-list details {
        position: relative;
        z-index: 1;
        margin: 0.5em;
        padding: 0.5em 1.5em;
    }

        #album-list details ol {
            padding-left: 1.5em;
            margin-top: 0.5em;
        }

            #album-list details ol a {
                display: block;
                text-decoration: unset;
                color: unset;
                cursor: help;
            }

        #album-list details.playing li.playing {
            text-shadow: 0 0 0.2em #5F5, 0 0 0.5em #3F3;
            color: #9F9;
        }

    #album-list summary {
        list-style: none;
        display: grid;
        grid-template-rows: 1.5em 1.5em;
        grid-template-columns: 3em 1fr 3em;
        column-gap: 1em;
    }

        #album-list summary > .album-cover {
            max-width: 1em;
            max-height: 1em;
            grid-column: 1;
            grid-row: 1 / span 2;
            font-size: 3em;
            text-align: center;
            line-height: 1em;
            justify-self: center;
            align-self: center;
        }

        #album-list summary > :is(.album-artist, .album-title) {
            line-height: 1.5em;
            grid-column: 2;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        #album-list summary > button {
            grid-row: 1 / span 2;
            grid-column: 3;
        }

    #album-list :is(.track-album, .track-artist) {
        display: none;
    }

div.tag-missing, li.tag-missing::marker {
    color: #F99;
}

div.tag-mixed, li.tag-mixed::marker {
    color: #9FF;
}

@media (max-width: 40rem) {
    #player > .controls {
        grid-template-rows: 3em clamp(2em, 10vh, 3em);
        grid-template-columns: repeat(5, auto);
        padding-bottom: 0;
    }

        #player > .controls > .timeline {
            grid-row: 2;
            grid-column: 1 / span 5;
            line-height: clamp(2em, 10vh, 3em);
        }
}

#tag-modal {
    min-width: 20em;
    max-width: 100%;
    background: var(--background);
    color: var(--foreground);
    padding: 0.5em;
    /* The glow overflows, so it must be set to visible. This means scrolling must be done with a div inside the dialog. */
    overflow: visible;
    box-sizing: border-box;
}

    #tag-modal::backdrop {
        background: black;
        opacity: 0.7;
    }

    #tag-modal.modal-tags {
        max-width: 35em;
    }

    #tag-modal > form {
        text-align: right;
    }

        #tag-modal > form button {
            background: var(--background);
            color: var(--foreground);
            border: none;
            border-radius: 0.5em;
        }

            #tag-modal > form button:hover {
                background: var(--foreground);
                color: var(--background);
            }

    #tag-modal > div {
        max-height: calc(100vh - 5em);
        overflow-y: auto;
    }

    #tag-modal h2 {
        margin: 0;
    }

    #tag-modal table, #tag-modal figure {
        font-family: monospace;
        margin-top: 0;
        text-align: left;
    }

        #tag-modal table th {
            padding-right: 0.5em;
            min-width: 8em;
        }

    #tag-modal table:not(:last-child) {
        margin-bottom: 1.5em;
    }

    #tag-modal img {
        min-width: min(20em, 100%);
        max-width: 100%;
    }

    #tag-modal figure {
        margin-left: 0;
        margin-right: 0;
        margin-bottom: 0;
    }

        #tag-modal figure:not(:last-child) {
            margin-bottom: 1em;
        }

        #tag-modal figure img {
            max-width: 100%;
        }

    #tag-modal ul {
        padding-left: 1em;
    }
